// Import statement.
import std.Reflection;
import std.Attr.*;
import std.Sys;
import std.Event.EventHub;
import std.Time;

space example;

// External method declaration.
extern printf( str ) ~> void ;

// Interface declaration.
iface ITalkable {
	// Function signature.
	fn talk ( ) ~> str ;
}

// Enum declaration.
enum DogEvent {
	Talk
}

@attr( AttrScope.Fn )
exp fn intercept(Attribute attribute, attaAttrTarget target) {
	Sys.ln("Target function call intercepted");
}

// Class declaration.
class Dog impl ITalkable {
	prot EventHub hub;

	// Attribute.
	@intercept()
	pub stat fn getName( ) ~> str {
		ret "Buddy";
	}

	pub fn talk ( ) ~> str {
		this.hub.dispatch(DogEvent.Talk, Time.now());
	
		// Return string literal.
		ret "Woof woof!";
	}
}